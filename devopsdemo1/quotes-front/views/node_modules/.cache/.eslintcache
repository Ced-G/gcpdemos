[{"/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/index.js":"1","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/App.js":"2","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/reportWebVitals.js":"3","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/insertwriter.jsx":"4","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/listquotes.jsx":"5","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/askllm.jsx":"6","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/FormErrors.js":"7"},{"size":587,"mtime":1681054408294,"results":"8","hashOfConfig":"9"},{"size":1707,"mtime":1692552630588,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1679947653349,"results":"11","hashOfConfig":"9"},{"size":3959,"mtime":1692187506953,"results":"12","hashOfConfig":"9"},{"size":7595,"mtime":1692611027604,"results":"13","hashOfConfig":"9"},{"size":7093,"mtime":1692355440013,"results":"14","hashOfConfig":"9"},{"size":355,"mtime":1681312718642,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1la3qoh",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"19"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/index.js",[],[],[],"/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/App.js",["40","41","42","43"],[],"/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/reportWebVitals.js",[],[],"/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/insertwriter.jsx",["44","45","46","47"],[],"import React, { useState } from 'react';\nimport { Button, Checkbox, Form } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport { FormErrors } from './FormErrors';\n\nexport default function InsertWriter() {\n  return (<NewWriter />);\n}\n\nclass NewWriter extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        writer: '',\n        color: '',\n        writerValid: false,\n        colorValid: false,\n        formErrors: {writer: '', color: ''},\n        formValid: false\n      }\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    \n  refresh() {\n    window.location.reload();\n  }\n  \n\n  handleChange(event) {\n//    this.setState({writer: event.target.writer});\n//    this.setState({color: event.target.color});\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n  \n    this.setState(\n      {[name]: value, }, () => { this.validateField(name, value)});\n    };\n  \n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let writerValid = this.state.writerValid;\n    let colorValid = this.state.colorValid;\n  \n    switch(fieldName) {\n      case 'writer':\n        //writerValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        writerValid = value.match(/^\\S+\\s\\S+$/i);\n        fieldValidationErrors.writerValid = writerValid ? '' : ' a writer is more than one word (first and last name) !';\n        break;\n      case 'color':\n        colorValid = value.length >= 7;\n        fieldValidationErrors.colorValid = colorValid ? '': ' a color is should have 7 characters';\n        break;\n      default:\n        break;\n    }\n    this.setState({formErrors: fieldValidationErrors,\n                    writerValid: writerValid,\n                    colorValid: colorValid\n                  }, this.validateForm);\n  }\n\n\n  validateForm() {\n    this.setState({formValid: this.state.writerValid && this.state.colorValid});\n  }\n  \n  errorClass(error) {\n    return(error.length === 0 ? '' : 'has-error');\n  }\n\n  handleSubmit(event) {\n //   alert('Submitted: Writer :' + this.state.writer +' Color :'+this.state.color);\n    window.$.get(`https://${process.env.REACT_APP_BACK_URL}/api/writers/insertwriter/${encodeURIComponent(this.state.writer)}/${encodeURIComponent(this.state.color)}`);\n    window.location.assign(\"/\");\n  }\n\n\n\n  render() {\n\n\n    return (\n      <div>\n \n \n              <h3>Create new writer</h3>\n              \n              <Form className=\"create-form\" onSubmit={this.handleSubmit} formErrors={this.state.formErrors}>\n                <div className=\"panel panel-default\">\n                  <FormErrors formErrors={this.state.formErrors} />\n                </div>\n                <Form.Field required='true' fluid >\n                    <label aline>Writer </label> <br/>\n                    <input name='writer' placeholder='FirstName LastName' value={this.state.writer} onChange={this.handleChange} style={{width: '350px'}}/>\n                </Form.Field>\n                <Form.Field required='true' >\n                    <label >Color  </label><br/>\n                    <select name='color' placeholder='#4285F4' value={this.state.color} onChange={this.handleChange} style={{width: '350px'}}>\n                      <option selected></option>\n                      <option value=\"#4285F4\">Blue</option>\n                      <option value=\"#DB4437\">Red</option>\n                      <option value=\"#F4B400\">Yellow</option>\n                      <option value=\"#0F9D58\">Green</option>\n                      <option value=\"#545454\">Grey</option>\n                    </select>\n                </Form.Field><br/>\n                <Button type='submit' disabled={!this.state.formValid}>Submit</Button>\n              </Form>\n      </div>\n\n    )\n}\n}\n\n","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/listquotes.jsx",["48","49","50","51"],[],"/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/askllm.jsx",["52","53","54","55","56"],[],"import React, { useState } from 'react';\nimport { Button, Form } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport { FormErrors } from './FormErrors';\nimport { View, StyleSheet, Text } from 'react-native';\n\n\nexport default function AskLLM() {\n  return (<AskBard />);\n}\n\n\nclass AskBard extends React.Component {\n\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        prompt: '',\n        promptValid: false,\n        formErrors: {prompt: ''},\n        formValid: false,\n        promptresponse: '',\n        characterCount: 0,\n        promptchatbisonresponse: '',\n        prompttextbisonresponse: '',\n      }\n\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.callChatBison = this.callChatBison.bind(this);\n      this.callTextBison = this.callTextBison.bind(this);\n\n    }\n\n  refresh() {\n    window.location.reload();\n  }\n  \n  handleChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n  \n    this.setState(\n      {[name]: value, }, () => { this.validateField(name, value)});\n    };\n  \n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let promptValid = this.state.promptValid;\n  \n    this.updateCharacterCount();\n\n    switch(fieldName) {\n      case 'prompt':\n        promptValid = value.length >= 2;\n        fieldValidationErrors.promptValid = promptValid ? '': ' a prompt is should have at least 2 characters';\n        break;\n      default:\n        break;\n    }\n    this.setState({formErrors: fieldValidationErrors,\n                    promptValid: promptValid\n                  }, this.validateForm,);\n  }\n\n\n  validateForm() {\n    this.setState({formValid: this.state.promptValid});\n  }\n  \n  errorClass(error) {\n    return(error.length === 0 ? '' : 'has-error');\n  }\n\n  updateCharacterCount() {\n    this.state.characterCount = this.state.prompt.length;\n  }\n\n\n  handleSubmit(event) {\n    /*\n    {\n      \"predictions\":[\n        {\n        \"safetyAttributes\":{\"categories\":[],\"blocked\":false,\"scores\":[]},\n        \"citationMetadata\":{\n          \"citations\":[\n            {\"endIndex\":148,\"startIndex\":22,\"url\":\"http://lfop.delidate.it/mr-tonito-2020-mp3.html\"}\n          ]},\n        \"content\":\"Apple Watch Series 7, Apple Watch SE, Apple Watch Series 6, Apple Watch Series 5, Apple Watch Series 4, Apple Watch Series 3, Apple Watch Series 2, Apple Watch Series 1\"}]\n      }\n      format 2 \n      {\"predictions\":[\n        {\"candidates\":[{\"content\":\"The quote  is form the wonderful and extraordinary \",\"author\":\"1\"}],\n        \"safetyAttributes\":[{\"categories\":[],\"blocked\":false,\"scores\":[]}],\n        \"citationMetadata\":[{\"citations\":[]}],\"content\":\"\"}]}\n    */\n\n    console.log(`https://${process.env.REACT_APP_LLMHELPER_URL}/api/llm-helper/:Prompt=${encodeURIComponent(this.state.prompt)}`);\n    \n    window.$.get(`https://${process.env.REACT_APP_LLMHELPER_URL}/api/llm-helper/:${encodeURIComponent(this.state.prompt)}`, res => {  \n      \n      console.log(\"Réponse LLM2\");\n      console.log(res); \n      console.log(res.predictions);\n      \n      /*this.setState({\n        //promptresponse: res.predictions[0].content\n        promptresponse: res.predictions[0].candidates[0].content\n      });*/\n\n      if (res.predictions[0].content.length){\n        console.log(res.predictions[0].content);\n        this.setState({\n          promptresponse: res.predictions[0].content\n        });\n        } else\n        {\n        console.log(res.predictions[0].candidates[0].content);\n        this.setState({\n          promptresponse: res.predictions[0].candidates[0].content \n        });      \n      };\n\n    });\n\n  }\n\n  callChatBison(event) {\n\n    console.log(`https://${process.env.REACT_APP_LLMHELPER_URL}/api/llm-helper-chat-bison/:Prompt=${encodeURIComponent(this.state.prompt)}`);\n    \n    window.$.get(`https://${process.env.REACT_APP_LLMHELPER_URL}/api/llm-helper-chat-bison/:${encodeURIComponent(this.state.prompt)}`, res => {  \n      \n      console.log(\"Réponse LLM2\");\n      console.log(res); \n      console.log(res.predictions);\n      \n      console.log(res.predictions[0].candidates[0].content);\n      this.setState({\n        promptchatbisonresponse: res.predictions[0].candidates[0].content \n      });      \n\n    });\n\n  }\n\n  callTextBison(event) {\n\n    console.log(`https://${process.env.REACT_APP_LLMHELPER_URL}/api/llm-helper-text-bison/:Prompt=${encodeURIComponent(this.state.prompt)}`);\n    \n    window.$.get(`https://${process.env.REACT_APP_LLMHELPER_URL}/api/llm-helper-text-bison/:${encodeURIComponent(this.state.prompt)}`, res => {  \n      \n      console.log(\"Réponse LLM2\");\n      console.log(res); \n      console.log(res.predictions);\n      \n      console.log(res.predictions[0].content);\n      this.setState({\n        prompttextbisonresponse: res.predictions[0].content\n      });\n\n\n    });\n    \n  }\n\n  render() {\n\n    return (\n      <div>\n\n              <h3>Ask LLM</h3>\n              \n              {/* <Form className=\"create-form\" onSubmit={this.handleSubmit} formErrors={this.state.formErrors}>*/}\n              <Form className=\"create-form\" formErrors={this.state.formErrors}>\n                <div className=\"panel panel-default\">\n                  <FormErrors formErrors={this.state.formErrors} />\n                </div>\n                <Form.Field required='true' fluid >\n                    <label aline>Hey Quotey who is the writer</label> <br/>\n                    {/* <input name='prompt' placeholder='Enter the quote here' value={this.state.prompt} onChange={this.handleChange} style={{width: '350px'}}/><br/>*/}\n                    <textarea id=\"prompt\" maxlength=\"350\" rows=\"3\" cols=\"100\" placeholder='Enter the quote here' name=\"prompt\"  value={this.state.prompt} onChange={this.handleChange}></textarea>\n                    {/* <label name='response'> {this.state.promptresponse} </label> */}\n                </Form.Field>\n                <div id=\"characterCount\">{this.state.characterCount}</div>\n                <Button type='submit' disabled={!this.state.formValid} onClick={this.handleSubmit}>Submit</Button>\n                <div id=\"formattedResponse\">\n                    <Text>\n                      {this.state.promptresponse.replace(/\\n/g,'\\n')}\n                    </Text>\n                </div>\n                <Button type='submit' disabled={!this.state.formValid} onClick={this.callChatBison}>CallChatBison</Button>\n                <div id=\"formattedResponse\">\n                    <Text>\n                      {this.state.promptchatbisonresponse.replace(/\\n/g,'\\n')}\n                    </Text>\n                </div>\n                <Button type='submit' disabled={!this.state.formValid} onClick={this.callTextBison}>CallTextBison</Button>\n                <div id=\"formattedResponse\">\n                    <Text>\n                      {this.state.prompttextbisonresponse.replace(/\\n/g,'\\n')}\n                    </Text>\n                </div>\n              </Form>\n      </div>\n\n    )\n}\n}\n\n","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/FormErrors.js",[],[],{"ruleId":"57","severity":1,"message":"58","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":12},{"ruleId":"57","severity":1,"message":"61","line":6,"column":59,"nodeType":"59","messageId":"60","endLine":6,"endColumn":63},{"ruleId":"62","severity":1,"message":"63","line":34,"column":17,"nodeType":"64","endLine":34,"endColumn":38},{"ruleId":"62","severity":1,"message":"63","line":35,"column":17,"nodeType":"64","endLine":35,"endColumn":37},{"ruleId":"57","severity":1,"message":"65","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"66","line":2,"column":18,"nodeType":"59","messageId":"60","endLine":2,"endColumn":26},{"ruleId":"57","severity":1,"message":"61","line":3,"column":10,"nodeType":"59","messageId":"60","endLine":3,"endColumn":14},{"ruleId":"57","severity":1,"message":"67","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":13},{"ruleId":"57","severity":1,"message":"61","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":14},{"ruleId":"57","severity":1,"message":"68","line":21,"column":7,"nodeType":"59","messageId":"60","endLine":21,"endColumn":16},{"ruleId":"62","severity":1,"message":"63","line":29,"column":11,"nodeType":"64","endLine":29,"endColumn":97},{"ruleId":"62","severity":1,"message":"63","line":200,"column":13,"nodeType":"64","endLine":200,"endColumn":64},{"ruleId":"57","severity":1,"message":"65","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"61","line":3,"column":10,"nodeType":"59","messageId":"60","endLine":3,"endColumn":14},{"ruleId":"57","severity":1,"message":"69","line":5,"column":10,"nodeType":"59","messageId":"60","endLine":5,"endColumn":14},{"ruleId":"57","severity":1,"message":"70","line":5,"column":16,"nodeType":"59","messageId":"60","endLine":5,"endColumn":26},{"ruleId":"71","severity":1,"message":"72","line":79,"column":5,"nodeType":"73","messageId":"74","endLine":79,"endColumn":15},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'Checkbox' is defined but never used.","'Table' is defined but never used.","'LoggedOut' is defined but never used.","'View' is defined but never used.","'StyleSheet' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation"]