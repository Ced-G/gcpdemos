[{"/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/index.js":"1","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/reportWebVitals.js":"2","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/App.js":"3","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/listquotes.jsx":"4","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/insertwriter.jsx":"5","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/FormErrors.js":"6"},{"size":587,"mtime":1681054408294,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1679947653349,"results":"9","hashOfConfig":"8"},{"size":1084,"mtime":1681323814736,"results":"10","hashOfConfig":"8"},{"size":6260,"mtime":1683097066678,"results":"11","hashOfConfig":"8"},{"size":4457,"mtime":1681327240107,"results":"12","hashOfConfig":"8"},{"size":355,"mtime":1681312718642,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1la3qoh",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/index.js",[],[],[],"/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/reportWebVitals.js",[],[],"/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/App.js",["36"],[],"import logo from './logo.svg';\nimport './App.css';\nimport ListQuotes from './js/listquotes';\nimport InsertWriter from './js/insertwriter';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n /*   <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>*/\n    <Router>\n\n        <div className=\"main\">\n          <div className=\"main\">\n           \n            <Routes>\n              <Route path='/insertwriter' element={<InsertWriter/>} />\n              <Route path='/' element={<ListQuotes/>} />             \n            </Routes>\n          </div>\n        </div>  \n      </Router>\n  );\n}\n\n//ReactDOM.render(<App />, document.getElementById('monapp'));\n\n\nexport default App;\n","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/listquotes.jsx",["37","38","39","40","41","42"],[],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\n\n\nexport default   function ListQuotes() {\n    return (<Quotes />);\n}\n\nclass Quotes extends React.Component {\n  render() {\n //   if (this.loggedIn) {\n      return (<LoggedIn />);\n //   } else {\n //     return (<LoggedOut />);\n //   }\n  }\n}\n\nclass LoggedOut extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"col-xs-8 col-xs-offset-2 jumbotron text-center\">\n          <h1>Hello World - Logged out</h1>\n          <p>Une nouvelle App</p>\n          <p>Sign in to get access </p>\n          <a onClick={this.authenticate} className=\"btn btn-primary btn-lg btn-login btn-block\">Sign In</a>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass LoggedIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      citations: [],\n      writers: [],\n    }\n\n    this.serverRequest = this.serverRequest.bind(this);\n \n    this.logout = this.logout.bind(this);\n\n   }\n\n    logout() {\n      localStorage.removeItem(\"id_token\");\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"profile\");\n      window.location.reload();\n    }\n    \n    refresh() {\n      window.location.reload();\n    }\n\n/*    addNewWriter() {\n      window.$.get(`https://${process.env.REACT_APP_BACK_URL}/api/writers/insertwriter/Hugo/%234285F4`);\n      window.location.reload();   \n    } */   \n\n    serverRequest() {\n    //     $.get(\"http://34.98.114.247/api/citations\", res => {\n    //      $.get(\"https://app.dev.gabrielbechara.com/api/citations\", res => {\n      //window.$.get('https://REACT_APP_BACK_URL/api/citations', res => {\n        window.$.get(`https://${process.env.REACT_APP_BACK_URL}/api/citations`, res => {\n            this.setState({\n              citations: res\n            });\n          });  \n          //window.$.get(\"https://REACT_APP_BACK_URL/api/writers\", res => {\n          window.$.get(`https://${process.env.REACT_APP_BACK_URL}/api/writers`, res => {  \n            this.setState({\n              citations: this.state.citations,\n              writers: res\n            });\n          });  \n        }\n      \n\n  componentDidMount() {\n    this.serverRequest();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"col-xs-8 col-xs-offset-2 jumbotron\">\n            <div className=\"col-lg-12\">\n               \n              <div class=\"topnav\" id=\"myTopnav\">\n                <Link to='/' size='0' class=\"active\">Liste Quotes</Link>\n                <Link to='/insertwriter' size='0'>Insert Writer</Link>                \n                <a onClick={this.refresh}>Refresh </a> \n                <a onClick={this.logout}>Log out</a>\n              </div>\n\n              <h3>List of quotes and writers v0.1</h3>\n              <div className=\"row\">\n                {this.state.citations.map(function(citation, i){\n                  return (<Citation key={i} citation={citation} />);\n                })}\n              </div>\n              <div className=\"row\">\n                {this.state.writers.map(function(writer, i){\n                  return (<Writer key={i} writer={writer} />);\n                })}\n              </div>\n\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Citation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      liked: \"\",\n      citations: [],\n    };\n    this.like = this.like.bind(this);\n    this.serverRequest = this.serverRequest.bind(this);\n  }\n    \n  like() {\n    let citation = this.props.citation;\n    this.serverRequest(citation);\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n  \n  serverRequest(citation) {\n    window.$.post(\n //     \"http://34.98.114.247/api/citations/like/\" + citation.id,\n //     \"https://REACT_APP_BACK_URL/api/citations/like/\" + citation.id,\n      `https://${process.env.REACT_APP_BACK_URL}/api/citations/like/` + citation.id,\n\n      { like: 1 },\n      res => {\n        console.log(\"res... \", res);\n        this.setState({ liked: \"Liked!\", citation: res });\n        this.props.citation = res;\n      }\n    );\n    this.refresh()\n  }\n\n  \n  render() {\n    return (\n      <div className=\"col-xs-4\">\n        <div className=\"panel panel-default\">\n          <div className=\"panel-heading\" style={{backgroundColor: this.props.citation.color, color: '#ffffff', fontWeight: 'bold'}}>#{this.props.citation.id} <span className=\"pull-right\">{this.state.liked}</span></div>\n          <div className=\"panel-body\" style={{backgroundColor: this.props.citation.color, color: '#ffffff', fontWeight: 'bold'}}>\n            {this.props.citation.citation}\n          </div>\n          \n          <div className=\"panel-footer\" style={{backgroundColor: this.props.citation.color, color: '#ffffff', fontWeight: 'bold'}}>\n            {this.props.citation.likes} Likes &nbsp;\n            <a onClick={this.like} className=\"btn btn-default\">\n              <span className=\"glyphicon glyphicon-thumbs-up\"></span>\n            </a>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Writer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      writers: [],\n    }\n\n//    this.serverRequest = this.serverRequest.bind(this);\n  }\n    \n\n  refresh() {\n    window.location.reload();\n  }\n\n  /*serverRequest(writer) {\n           $.get(\"https://REACT_APP_BACK_URL/api/writers\", res => {\n            this.setState({\n              writers: res\n            });\n            this.props.writer = res;\n            console.log(\"res writer ... \", res);\n          })\n        }*/\n \n\n  render() {\n    console.log(\"res writer ... \", this.props.writer);\n    return (\n    <div className=\"col-xs-4\">\n        <div className=\"panel panel-default\">\n          <div className=\"panel-heading\" style={{backgroundColor: this.props.writer.color, color: '#ffffff', fontWeight: 'bold'}}>#{this.props.writer.id} <span className=\"pull-right\"></span></div>\n          <div className=\"panel-body\" style={{backgroundColor: this.props.writer.color, color: '#ffffff', fontWeight: 'bold'}}>\n            {this.props.writer.writer}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\n//ReactDOM.render(<App />, document.getElementById('monapp'));\n","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/insertwriter.jsx",["43","44","45","46","47"],[],"import React, { useState } from 'react';\nimport { Button, Checkbox, Form } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport { FormErrors } from './FormErrors';\n\nexport default function InsertWriter() {\n  return (<NewWriter />);\n}\n\nclass NewWriter extends React.Component {\n\n\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        writer: '',\n        color: '',\n        writerValid: false,\n        colorValid: false,\n        formErrors: {writer: '', color: ''},\n        formValid: false\n      }\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    \n  refresh() {\n    window.location.reload();\n  }\n  \n\n  handleChange(event) {\n//    this.setState({writer: event.target.writer});\n//    this.setState({color: event.target.color});\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n  \n    this.setState(\n      {[name]: value, }, () => { this.validateField(name, value)});\n    };\n  \n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let writerValid = this.state.writerValid;\n    let colorValid = this.state.colorValid;\n  \n    switch(fieldName) {\n      case 'writer':\n        //writerValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        writerValid = value.match(/^\\S+\\s\\S+$/i);\n        fieldValidationErrors.writerValid = writerValid ? '' : ' a writer is more than one word (first and last name) !';\n        break;\n      case 'color':\n        colorValid = value.length >= 7;\n        fieldValidationErrors.colorValid = colorValid ? '': ' a color is should have 7 caracters';\n        break;\n      default:\n        break;\n    }\n    this.setState({formErrors: fieldValidationErrors,\n                    writerValid: writerValid,\n                    colorValid: colorValid\n                  }, this.validateForm);\n  }\n\n\n  validateForm() {\n    this.setState({formValid: this.state.writerValid && this.state.colorValid});\n  }\n  \n  errorClass(error) {\n    return(error.length === 0 ? '' : 'has-error');\n  }\n\n  handleSubmit(event) {\n //   alert('Submitted: Writer :' + this.state.writer +' Color :'+this.state.color);\n    window.$.get(`https://${process.env.REACT_APP_BACK_URL}/api/writers/insertwriter/${encodeURIComponent(this.state.writer)}/${encodeURIComponent(this.state.color)}`);\n    window.location.assign(\"/\");\n  }\n\n\n\n  render() {\n\n\n    return (\n      <div className=\"container\">\n          <div className=\"col-xs-8 col-xs-offset-2 jumbotron\"> \n            <div className=\"col-lg-12\">\n\n              <div class=\"topnav\" id=\"myTopnav\">\n                <Link to='/' size='0'>Liste Quotes</Link>\n                <Link to='/insertwriter' class=\"active\" size='0'>Insert Writer</Link>                \n                <a onClick={this.refresh}>Refresh </a> \n                <a onClick={this.logout}>Log out</a>\n\n              </div>\n\n\n              <h3>Create new writer</h3>\n              \n              <Form className=\"create-form\" onSubmit={this.handleSubmit} formErrors={this.state.formErrors}>\n                <div className=\"panel panel-default\">\n                  <FormErrors formErrors={this.state.formErrors} />\n                </div>\n                <Form.Field required='true' fluid >\n                    <label aline>Writer </label> <br/>\n                    <input name='writer' placeholder='FirstName LastName' value={this.state.writer} onChange={this.handleChange} style={{width: '350px'}}/>\n                </Form.Field>\n                <Form.Field required='true' >\n                    <label >Color  </label><br/>\n                    <select name='color' placeholder='#4285F4' value={this.state.color} onChange={this.handleChange} style={{width: '350px'}}>\n                      <option selected></option>\n                      <option value=\"#4285F4\">Blue</option>\n                      <option value=\"#DB4437\">Red</option>\n                      <option value=\"#F4B400\">Yellow</option>\n                      <option value=\"#0F9D58\">Green</option>\n                      <option value=\"#545454\">Grey</option>\n                    </select>\n                </Form.Field><br/>\n                <Button type='submit' disabled={!this.state.formValid}>Submit</Button>\n              </Form>\n          </div>\n        </div>\n      </div>\n\n    )\n}\n}\n\n","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/FormErrors.js",[],[],{"ruleId":"48","severity":1,"message":"49","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":12},{"ruleId":"48","severity":1,"message":"52","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":13},{"ruleId":"48","severity":1,"message":"53","line":20,"column":7,"nodeType":"50","messageId":"51","endLine":20,"endColumn":16},{"ruleId":"54","severity":1,"message":"55","line":28,"column":11,"nodeType":"56","endLine":28,"endColumn":97},{"ruleId":"54","severity":1,"message":"55","line":97,"column":17,"nodeType":"56","endLine":97,"endColumn":43},{"ruleId":"54","severity":1,"message":"55","line":98,"column":17,"nodeType":"56","endLine":98,"endColumn":42},{"ruleId":"54","severity":1,"message":"55","line":168,"column":13,"nodeType":"56","endLine":168,"endColumn":64},{"ruleId":"48","severity":1,"message":"57","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"58","line":2,"column":18,"nodeType":"50","messageId":"51","endLine":2,"endColumn":26},{"ruleId":"48","severity":1,"message":"52","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":13},{"ruleId":"54","severity":1,"message":"55","line":101,"column":17,"nodeType":"56","endLine":101,"endColumn":43},{"ruleId":"54","severity":1,"message":"55","line":102,"column":17,"nodeType":"56","endLine":102,"endColumn":42},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","'LoggedOut' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'Checkbox' is defined but never used."]