[{"/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/index.js":"1","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/App.js":"2","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/reportWebVitals.js":"3","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/insertwriter.jsx":"4","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/listquotes.jsx":"5","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/askllm.jsx":"6","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/FormErrors.js":"7"},{"size":788,"mtime":1692695074377,"results":"8","hashOfConfig":"9"},{"size":3320,"mtime":1692715701876,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1679947653349,"results":"11","hashOfConfig":"9"},{"size":3959,"mtime":1692187506953,"results":"12","hashOfConfig":"9"},{"size":7597,"mtime":1692624519321,"results":"13","hashOfConfig":"9"},{"size":7093,"mtime":1692355440013,"results":"14","hashOfConfig":"9"},{"size":355,"mtime":1681312718642,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1la3qoh",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/index.js",[],[],"/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/App.js",["41","42","43","44"],[],"/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/reportWebVitals.js",[],[],[],"/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/insertwriter.jsx",["45","46","47","48"],[],"import React, { useState } from 'react';\nimport { Button, Checkbox, Form } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport { FormErrors } from './FormErrors';\n\nexport default function InsertWriter() {\n  return (<NewWriter />);\n}\n\nclass NewWriter extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        writer: '',\n        color: '',\n        writerValid: false,\n        colorValid: false,\n        formErrors: {writer: '', color: ''},\n        formValid: false\n      }\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    \n  refresh() {\n    window.location.reload();\n  }\n  \n\n  handleChange(event) {\n//    this.setState({writer: event.target.writer});\n//    this.setState({color: event.target.color});\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n  \n    this.setState(\n      {[name]: value, }, () => { this.validateField(name, value)});\n    };\n  \n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let writerValid = this.state.writerValid;\n    let colorValid = this.state.colorValid;\n  \n    switch(fieldName) {\n      case 'writer':\n        //writerValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        writerValid = value.match(/^\\S+\\s\\S+$/i);\n        fieldValidationErrors.writerValid = writerValid ? '' : ' a writer is more than one word (first and last name) !';\n        break;\n      case 'color':\n        colorValid = value.length >= 7;\n        fieldValidationErrors.colorValid = colorValid ? '': ' a color is should have 7 characters';\n        break;\n      default:\n        break;\n    }\n    this.setState({formErrors: fieldValidationErrors,\n                    writerValid: writerValid,\n                    colorValid: colorValid\n                  }, this.validateForm);\n  }\n\n\n  validateForm() {\n    this.setState({formValid: this.state.writerValid && this.state.colorValid});\n  }\n  \n  errorClass(error) {\n    return(error.length === 0 ? '' : 'has-error');\n  }\n\n  handleSubmit(event) {\n //   alert('Submitted: Writer :' + this.state.writer +' Color :'+this.state.color);\n    window.$.get(`https://${process.env.REACT_APP_BACK_URL}/api/writers/insertwriter/${encodeURIComponent(this.state.writer)}/${encodeURIComponent(this.state.color)}`);\n    window.location.assign(\"/\");\n  }\n\n\n\n  render() {\n\n\n    return (\n      <div>\n \n \n              <h3>Create new writer</h3>\n              \n              <Form className=\"create-form\" onSubmit={this.handleSubmit} formErrors={this.state.formErrors}>\n                <div className=\"panel panel-default\">\n                  <FormErrors formErrors={this.state.formErrors} />\n                </div>\n                <Form.Field required='true' fluid >\n                    <label aline>Writer </label> <br/>\n                    <input name='writer' placeholder='FirstName LastName' value={this.state.writer} onChange={this.handleChange} style={{width: '350px'}}/>\n                </Form.Field>\n                <Form.Field required='true' >\n                    <label >Color  </label><br/>\n                    <select name='color' placeholder='#4285F4' value={this.state.color} onChange={this.handleChange} style={{width: '350px'}}>\n                      <option selected></option>\n                      <option value=\"#4285F4\">Blue</option>\n                      <option value=\"#DB4437\">Red</option>\n                      <option value=\"#F4B400\">Yellow</option>\n                      <option value=\"#0F9D58\">Green</option>\n                      <option value=\"#545454\">Grey</option>\n                    </select>\n                </Form.Field><br/>\n                <Button type='submit' disabled={!this.state.formValid}>Submit</Button>\n              </Form>\n      </div>\n\n    )\n}\n}\n\n","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/listquotes.jsx",["49","50","51","52"],[],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n//import Table from 'react-bootstrap/Table';\n\n\nexport default   function ListQuotes() {\n    return (<Quotes />);\n}\n\nclass Quotes extends React.Component {\n  render() {\n //   if (this.loggedIn) {\n      return (<LoggedIn />);\n //   } else {\n //     return (<LoggedOut />);\n //   }\n  }\n}\n\nclass LoggedOut extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"col-xs-8 col-xs-offset-2 jumbotron text-center\">\n          <h1>Hello World - Logged out</h1>\n          <p>Une nouvelle App</p>\n          <p>Sign in to get access </p>\n          <a onClick={this.authenticate} className=\"btn btn-primary btn-lg btn-login btn-block\">Sign In</a>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass LoggedIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      citations: [],\n      writers: [],\n    }\n\n    this.serverRequest = this.serverRequest.bind(this);\n \n    this.logout = this.logout.bind(this);\n\n   }\n\n    logout() {\n      localStorage.removeItem(\"id_token\");\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"profile\");\n      window.location.reload();\n    }\n    \n    refresh() {\n      window.location.reload();\n    }\n\n\n    serverRequest() {\n          /*window.$.get(`https://${process.env.REACT_APP_BACK_URL}/api/citations`, res => {\n            this.setState({\n              citations: res\n            });\n          });*/\n          /*fetch(`https://${process.env.REACT_APP_BACK_URL}/api/citations`)\n          .then((res) => res.json())\n          .then((json) => {\n            this.setState({\n              citations: json\n            });\n          });*/\n          axios.get(`https://${process.env.REACT_APP_BACK_URL}/api/citations`)\n          .then(res => {\n            this.setState({\n              citations: res.data\n            });\n          });  \n          /*window.$.get(`https://${process.env.REACT_APP_BACK_URL}/api/writers`, res => {  \n            this.setState({\n              citations: this.state.citations,\n              writers: res\n            });\n          });*/\n          /*fetch(`https://${process.env.REACT_APP_BACK_URL}/api/writers`)\n          .then((res) => res.json())\n          .then((json) => {\n            this.setState({\n              writers: json\n            });\n          });*/\n          axios.get(`https://${process.env.REACT_APP_BACK_URL}/api/writers`)\n          .then(res => {\n            this.setState({\n              writers: res.data\n            });\n          });  \n        }\n      \n\n  componentDidMount() {\n    this.serverRequest();\n  }\n\n  render() {\n    return (\n      <div>\n             {/*    <div className=\"col-xs-8 col-xs-offset-2 jumbotron\"> \n                    <div className=\"col-lg-12\">*/}\n\n              {/* \n              <div class=\"topnav\" id=\"myTopnav\">\n                <Link to='/' size='0' class=\"active\">List Quotes</Link>\n                <Link to='/insertwriter' size='0'>Insert Writer</Link>\n                <Link to='/askllm' size='0'>Ask LLM</Link>                \n                <a onClick={this.refresh}>Refresh </a> \n                <a onClick={this.logout}>Log out</a>\n              </div>*/}\n\n              <h3>List of quotes and writers v0.7.5</h3>\n              <div className=\"row\">\n                {this.state.citations.map(function(citation, i){\n                  return (<Citation key={i} citation={citation} />);\n                })}\n              </div>\n              <div className=\"row\">\n                {this.state.writers.map(function(writer, i){\n                  return (<Writer key={i} writer={writer} />);\n                })}\n              </div>\n\n      </div>\n    )\n  }\n}\n\nclass Citation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      liked: \"\",\n      citations: [],\n    };\n    this.like = this.like.bind(this);\n    this.serverRequest = this.serverRequest.bind(this);\n\n  }\n  \n  like() {\n    let citation = this.props.citation;\n    this.serverRequest(citation);\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n  \n  serverRequest(citation) {\n   /* window.$.post(\n      `https://${process.env.REACT_APP_BACK_URL}/api/citations/like/` + citation.id,\n      { like: 1 },\n      res => {\n        console.log(\"res... \", res);\n        this.setState({ liked: \"Liked!\", citation: res });\n        this.props.citation = res;\n      }\n    );*/\n    axios.post(`https://${process.env.REACT_APP_BACK_URL}/api/citations/like/` + citation.id, { like: 1 })\n      .then(res => {\n          //console.log(\"res of axios post... \", res.data);\n          this.setState({ liked: \"Liked!\", citations: res.data });\n          //console.log(\"res of axios this.state.liked-1... \", this.state.liked);\n          //console.log(\"res of axios this.props.citations-1... \", this.props.citation);\n          //console.log(\"res of axios this.props.liked-1... \", this.props.liked);\n          //this.props.citations = res.data;\n          //console.log(\"res of axios this.state.citations-2... \", this.props.citations);\n          //console.log(\"res of axios this.props.liked-2... \", this.props.liked);\n        }\n      )\n    ;\n    //this.refresh()\n  }\n\n  \n  render() {\n    console.log(\"props citation in render... \", this.props.citation);\n    console.log(\"state citation in render... \", this.state.citations[this.props.citation.id-1]);\n    return (\n      <div className=\"col-xs-4\">\n        <div className=\"panel panel-default\">\n          <div className=\"panel-heading\" style={{backgroundColor: this.props.citation.color, color: '#ffffff', fontWeight: 'bold'}}>#{this.props.citation.id} <span className=\"pull-right\">{this.state.liked}</span></div>\n          <div className=\"panel-body\" style={{backgroundColor: this.props.citation.color, color: '#ffffff', fontWeight: 'bold'}}>\n            {this.props.citation.citation}\n          </div>\n          \n          <div className=\"panel-footer\" style={{backgroundColor: this.props.citation.color, color: '#ffffff', fontWeight: 'bold'}}>\n            {(this.state.citations.length !== 0)?this.state.citations[this.props.citation.id-1].likes:this.props.citation.likes} Likes &nbsp;            \n            <a onClick={this.like} className=\"btn btn-default\">\n              <span className=\"glyphicon glyphicon-thumbs-up\"></span>\n            </a>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Writer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      writers: [],\n    }\n\n//    this.serverRequest = this.serverRequest.bind(this);\n  }\n    \n\n  refresh() {\n    window.location.reload();\n  }\n\n  /*serverRequest(writer) {\n           $.get(\"https://REACT_APP_BACK_URL/api/writers\", res => {\n            this.setState({\n              writers: res\n            });\n            this.props.writer = res;\n            console.log(\"res writer ... \", res);\n          })\n        }*/\n \n\n  render() {\n    console.log(\"res writer ... \", this.props.writer);\n    return (\n    <div className=\"col-xs-4\">\n        <div className=\"panel panel-default\">\n          <div className=\"panel-heading\" style={{backgroundColor: this.props.writer.color, color: '#ffffff', fontWeight: 'bold'}}>#{this.props.writer.id} <span className=\"pull-right\"></span></div>\n          <div className=\"panel-body\" style={{backgroundColor: this.props.writer.color, color: '#ffffff', fontWeight: 'bold'}}>\n            {this.props.writer.writer}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\n//ReactDOM.render(<App />, document.getElementById('monapp'));\n","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/askllm.jsx",["53","54","55","56","57"],[],"import React, { useState } from 'react';\nimport { Button, Form } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport { FormErrors } from './FormErrors';\nimport { View, StyleSheet, Text } from 'react-native';\n\n\nexport default function AskLLM() {\n  return (<AskBard />);\n}\n\n\nclass AskBard extends React.Component {\n\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        prompt: '',\n        promptValid: false,\n        formErrors: {prompt: ''},\n        formValid: false,\n        promptresponse: '',\n        characterCount: 0,\n        promptchatbisonresponse: '',\n        prompttextbisonresponse: '',\n      }\n\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.callChatBison = this.callChatBison.bind(this);\n      this.callTextBison = this.callTextBison.bind(this);\n\n    }\n\n  refresh() {\n    window.location.reload();\n  }\n  \n  handleChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n  \n    this.setState(\n      {[name]: value, }, () => { this.validateField(name, value)});\n    };\n  \n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let promptValid = this.state.promptValid;\n  \n    this.updateCharacterCount();\n\n    switch(fieldName) {\n      case 'prompt':\n        promptValid = value.length >= 2;\n        fieldValidationErrors.promptValid = promptValid ? '': ' a prompt is should have at least 2 characters';\n        break;\n      default:\n        break;\n    }\n    this.setState({formErrors: fieldValidationErrors,\n                    promptValid: promptValid\n                  }, this.validateForm,);\n  }\n\n\n  validateForm() {\n    this.setState({formValid: this.state.promptValid});\n  }\n  \n  errorClass(error) {\n    return(error.length === 0 ? '' : 'has-error');\n  }\n\n  updateCharacterCount() {\n    this.state.characterCount = this.state.prompt.length;\n  }\n\n\n  handleSubmit(event) {\n    /*\n    {\n      \"predictions\":[\n        {\n        \"safetyAttributes\":{\"categories\":[],\"blocked\":false,\"scores\":[]},\n        \"citationMetadata\":{\n          \"citations\":[\n            {\"endIndex\":148,\"startIndex\":22,\"url\":\"http://lfop.delidate.it/mr-tonito-2020-mp3.html\"}\n          ]},\n        \"content\":\"Apple Watch Series 7, Apple Watch SE, Apple Watch Series 6, Apple Watch Series 5, Apple Watch Series 4, Apple Watch Series 3, Apple Watch Series 2, Apple Watch Series 1\"}]\n      }\n      format 2 \n      {\"predictions\":[\n        {\"candidates\":[{\"content\":\"The quote  is form the wonderful and extraordinary \",\"author\":\"1\"}],\n        \"safetyAttributes\":[{\"categories\":[],\"blocked\":false,\"scores\":[]}],\n        \"citationMetadata\":[{\"citations\":[]}],\"content\":\"\"}]}\n    */\n\n    console.log(`https://${process.env.REACT_APP_LLMHELPER_URL}/api/llm-helper/:Prompt=${encodeURIComponent(this.state.prompt)}`);\n    \n    window.$.get(`https://${process.env.REACT_APP_LLMHELPER_URL}/api/llm-helper/:${encodeURIComponent(this.state.prompt)}`, res => {  \n      \n      console.log(\"Réponse LLM2\");\n      console.log(res); \n      console.log(res.predictions);\n      \n      /*this.setState({\n        //promptresponse: res.predictions[0].content\n        promptresponse: res.predictions[0].candidates[0].content\n      });*/\n\n      if (res.predictions[0].content.length){\n        console.log(res.predictions[0].content);\n        this.setState({\n          promptresponse: res.predictions[0].content\n        });\n        } else\n        {\n        console.log(res.predictions[0].candidates[0].content);\n        this.setState({\n          promptresponse: res.predictions[0].candidates[0].content \n        });      \n      };\n\n    });\n\n  }\n\n  callChatBison(event) {\n\n    console.log(`https://${process.env.REACT_APP_LLMHELPER_URL}/api/llm-helper-chat-bison/:Prompt=${encodeURIComponent(this.state.prompt)}`);\n    \n    window.$.get(`https://${process.env.REACT_APP_LLMHELPER_URL}/api/llm-helper-chat-bison/:${encodeURIComponent(this.state.prompt)}`, res => {  \n      \n      console.log(\"Réponse LLM2\");\n      console.log(res); \n      console.log(res.predictions);\n      \n      console.log(res.predictions[0].candidates[0].content);\n      this.setState({\n        promptchatbisonresponse: res.predictions[0].candidates[0].content \n      });      \n\n    });\n\n  }\n\n  callTextBison(event) {\n\n    console.log(`https://${process.env.REACT_APP_LLMHELPER_URL}/api/llm-helper-text-bison/:Prompt=${encodeURIComponent(this.state.prompt)}`);\n    \n    window.$.get(`https://${process.env.REACT_APP_LLMHELPER_URL}/api/llm-helper-text-bison/:${encodeURIComponent(this.state.prompt)}`, res => {  \n      \n      console.log(\"Réponse LLM2\");\n      console.log(res); \n      console.log(res.predictions);\n      \n      console.log(res.predictions[0].content);\n      this.setState({\n        prompttextbisonresponse: res.predictions[0].content\n      });\n\n\n    });\n    \n  }\n\n  render() {\n\n    return (\n      <div>\n\n              <h3>Ask LLM</h3>\n              \n              {/* <Form className=\"create-form\" onSubmit={this.handleSubmit} formErrors={this.state.formErrors}>*/}\n              <Form className=\"create-form\" formErrors={this.state.formErrors}>\n                <div className=\"panel panel-default\">\n                  <FormErrors formErrors={this.state.formErrors} />\n                </div>\n                <Form.Field required='true' fluid >\n                    <label aline>Hey Quotey who is the writer</label> <br/>\n                    {/* <input name='prompt' placeholder='Enter the quote here' value={this.state.prompt} onChange={this.handleChange} style={{width: '350px'}}/><br/>*/}\n                    <textarea id=\"prompt\" maxlength=\"350\" rows=\"3\" cols=\"100\" placeholder='Enter the quote here' name=\"prompt\"  value={this.state.prompt} onChange={this.handleChange}></textarea>\n                    {/* <label name='response'> {this.state.promptresponse} </label> */}\n                </Form.Field>\n                <div id=\"characterCount\">{this.state.characterCount}</div>\n                <Button type='submit' disabled={!this.state.formValid} onClick={this.handleSubmit}>Submit</Button>\n                <div id=\"formattedResponse\">\n                    <Text>\n                      {this.state.promptresponse.replace(/\\n/g,'\\n')}\n                    </Text>\n                </div>\n                <Button type='submit' disabled={!this.state.formValid} onClick={this.callChatBison}>CallChatBison</Button>\n                <div id=\"formattedResponse\">\n                    <Text>\n                      {this.state.promptchatbisonresponse.replace(/\\n/g,'\\n')}\n                    </Text>\n                </div>\n                <Button type='submit' disabled={!this.state.formValid} onClick={this.callTextBison}>CallTextBison</Button>\n                <div id=\"formattedResponse\">\n                    <Text>\n                      {this.state.prompttextbisonresponse.replace(/\\n/g,'\\n')}\n                    </Text>\n                </div>\n              </Form>\n      </div>\n\n    )\n}\n}\n\n","/home/user/gcpdemos/devopsdemo1/quotes-front/views/src/js/FormErrors.js",[],[],{"ruleId":"58","severity":1,"message":"59","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":12},{"ruleId":"58","severity":1,"message":"62","line":6,"column":59,"nodeType":"60","messageId":"61","endLine":6,"endColumn":63},{"ruleId":"63","severity":1,"message":"64","line":21,"column":7,"nodeType":"65","messageId":"66","endLine":21,"endColumn":16},{"ruleId":"67","severity":1,"message":"68","line":79,"column":17,"nodeType":"69","endLine":79,"endColumn":38},{"ruleId":"58","severity":1,"message":"70","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"71","line":2,"column":18,"nodeType":"60","messageId":"61","endLine":2,"endColumn":26},{"ruleId":"58","severity":1,"message":"62","line":3,"column":10,"nodeType":"60","messageId":"61","endLine":3,"endColumn":14},{"ruleId":"58","severity":1,"message":"72","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":13},{"ruleId":"58","severity":1,"message":"62","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":14},{"ruleId":"58","severity":1,"message":"73","line":21,"column":7,"nodeType":"60","messageId":"61","endLine":21,"endColumn":16},{"ruleId":"67","severity":1,"message":"68","line":29,"column":11,"nodeType":"69","endLine":29,"endColumn":97},{"ruleId":"67","severity":1,"message":"68","line":200,"column":13,"nodeType":"69","endLine":200,"endColumn":64},{"ruleId":"58","severity":1,"message":"70","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"62","line":3,"column":10,"nodeType":"60","messageId":"61","endLine":3,"endColumn":14},{"ruleId":"58","severity":1,"message":"74","line":5,"column":10,"nodeType":"60","messageId":"61","endLine":5,"endColumn":14},{"ruleId":"58","severity":1,"message":"75","line":5,"column":16,"nodeType":"60","messageId":"61","endLine":5,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":79,"column":5,"nodeType":"78","messageId":"79","endLine":79,"endColumn":15},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-dupe-keys","Duplicate key 'onSuccess'.","ObjectExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'Checkbox' is defined but never used.","'Table' is defined but never used.","'LoggedOut' is defined but never used.","'View' is defined but never used.","'StyleSheet' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation"]