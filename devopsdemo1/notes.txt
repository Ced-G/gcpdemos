export GOOGLE_CLOUD_PROJECT_ID=gab-devops-1 
export GOOGLE_CLOUD_REGION=us-central1
export SKAFFOLD_DEFAULT_REPO=$GOOGLE_CLOUD_REGION-docker.pkg.dev/$GOOGLE_CLOUD_PROJECT_ID/canary-repo

gcloud artifacts repositories create canary-repo --repository-format=docker \
--location=$GOOGLE_CLOUD_REGION --project $GOOGLE_CLOUD_PROJECT_ID --description="Docker repository for canary blog"
gcloud auth configure-docker $GOOGLE_CLOUD_REGION-docker.pkg.dev
export SKAFFOLD_DEFAULT_REPO=$GOOGLE_CLOUD_REGION-docker.pkg.dev/$GOOGLE_CLOUD_PROJECT_ID/canary-repo


gcloud projects add-iam-policy-binding $GOOGLE_CLOUD_PROJECT_ID \
--member=serviceAccount:$(gcloud projects describe $GOOGLE_CLOUD_PROJECT_ID \
--format="value(projectNumber)")-compute@developer.gserviceaccount.com \
--role="roles/clouddeploy.jobRunner"

gcloud projects add-iam-policy-binding $GOOGLE_CLOUD_PROJECT_ID \
--member=serviceAccount:$(gcloud projects describe $GOOGLE_CLOUD_PROJECT_ID \
--format="value(projectNumber)")-compute@developer.gserviceaccount.com \
--role="roles/container.developer"

gcloud projects add-iam-policy-binding $GOOGLE_CLOUD_PROJECT_ID \
--member=serviceAccount:$(gcloud projects describe $GOOGLE_CLOUD_PROJECT_ID \
--format="value(projectNumber)")-compute@developer.gserviceaccount.com \
--role="roles/container.developer"


sed -i "s/GOOGLE_CLOUD_PROJECT_ID/$GOOGLE_CLOUD_PROJECT_ID/g" clouddeploy.yaml
on mac : sed -i "" "s/GOOGLE_CLOUD_PROJECT_ID/$GOOGLE_CLOUD_PROJECT_ID/g" clouddeploy.yaml

sed -i "s/GOOGLE_CLOUD_REGION/$GOOGLE_CLOUD_REGION/g" clouddeploy.yaml
on mac : sed -i "" "s/GOOGLE_CLOUD_REGION/$GOOGLE_CLOUD_REGION/g" clouddeploy.yaml

gcloud deploy apply --file clouddeploy.yaml \
 --region=$GOOGLE_CLOUD_REGION --project=$GOOGLE_CLOUD_PROJECT_ID

gcloud deploy apply --file clouddeploy-run.yaml \
 --region=$GOOGLE_CLOUD_REGION --project=$GOOGLE_CLOUD_PROJECT_ID

gcloud deploy apply --file clouddeploy-gke.yaml \
 --region=$GOOGLE_CLOUD_REGION --project=$GOOGLE_CLOUD_PROJECT_ID


gcloud deploy releases create release-101 \
 --project=$GOOGLE_CLOUD_PROJECT_ID --region=$GOOGLE_CLOUD_REGION \
 --delivery-pipeline=canary --to-target=dev \
 --images=famousquotes-back=$(skaffold build -q | jq -r ".builds[].tag")


#ERROR: (gcloud.deploy.releases.create) FAILED_PRECONDITION: if a Cloud Run target is used all targets in a pipeline must be Cloud Run targets. dev-back is not: failed precondition

#cd quotes-front
gcloud deploy releases create release-114 \
 --project=$GOOGLE_CLOUD_PROJECT_ID --region=$GOOGLE_CLOUD_REGION \
 --skaffold-version=skaffold_preview \
 --skaffold-file=quotes-front/skaffold.yaml \
 --delivery-pipeline=devopsdemo1-run --to-target=dev \
 --images=famousquotes-front=$LOCATION-docker.pkg.dev/$PROJECT_ID/canary-repo/famousquotes-front:86002a7-dirty 
# --images=famousquotes-front=$(skaffold -f=quotes-front/skaffold.yaml build -q | jq -r ".builds[].tag")

#cd quotes-back
gcloud deploy releases create release-115 \
 --project=$GOOGLE_CLOUD_PROJECT_ID --region=$GOOGLE_CLOUD_REGION \
 --skaffold-file=quotes-back/skaffold.yaml \
 --delivery-pipeline=devopsdemo1-gke --to-target=dev \
 --images=famousquotes-front=$LOCATION-docker.pkg.dev/$PROJECT_ID/canary-repo/famousquotes-back:86002a7-dirty
# --images=famousquotes-back=$(skaffold build -q | jq -r ".builds[].tag")


#gcloud builds submit --region=us-central1 --tag $GOOGLE_CLOUD_REGION-docker.pkg.dev/$GOOGLE_CLOUD_PROJECT_ID/canary-repo/famousquotes-back ./app
gcloud builds submit --region=us-central1 --config cloudbuild.yaml ./

gcloud auth application-default login
#gcloud run services add-iam-policy-binding famousquotes-front --member="allUsers"  --role=roles/run.invoker --region=$GOOGLE_CLOUD_REGION
#gcloud run deploy famousquotes-front --allow-unauthenticated --image=$SKAFFOLD_DEFAULT_REPO/famousquotes-front:6148d1b-dirty --platform managed --region=$GOOGLE_CLOUD_REGION
gcloud run services set-iam-policy quotes-front policy.yaml --region=$GOOGLE_CLOUD_REGION

gcloud compute ssl-certificates delete gab-devops-certificate
gcloud compute ssl-certificates create gab-dev-certificate --domains app.dev.gabrielbechara.com --global
gcloud compute ssl-certificates create gab-prod-certificate --domains app.prod.gabrielbechara.com --global

gcloud container clusters resize example-cluster --num-nodes=0 --region=us-central1
gcloud container clusters resize example-cluster --num-nodes=1 --region=us-central1
gcloud deploy delivery-pipelines delete canary --region=$GOOGLE_CLOUD_REGION --project=$GOOGLE_CLOUD_PROJECT_ID --force
